
1) Programrendszer célja
      - Rendszercélok:

	A célszoftver a megrendelő igényeinek megfelelő szoftver. A követelmények a rendszer specifikációban foglaltak, 
	  így az irányadó követelményi feladatok e dokumentum alapján lesz figyelembe véve. A célcsoport fenntartja a jogot,
	  hogy a későbbiekben a megrendelővel tárgyaljon a szoftver követelmény- illetve megvalósítás, esetleges felmerülő
	  problémák esetén. 
	

	A megvalósíthatósági elemzés alapján, a kapott adatok szerint a szoftverfejlesztés kockázati szintjét növeli, hogy
	  a célcsoport tagjai főállásban mással is foglalkoznak, így számba kell venni a környezeti, társadalmi valamint
	  gazdasági hatásokat is. Ennek ismeretében a célcsoport fent tartja a jogot, az esetleges határidő eltolásával.	

      - Hardver-, szoftverkörnyezet (üzemmód, működési feltételek)

	A célszoftver követelménye, hogy fusson minden Windows alapú rendszeren. Mivel projektmenedzsment részlege a 
	  cégnek nincs, így nem tudjuk a minimális hardver szükségletet meghatározni. Ennek megfelelően, a működési
	  feltétel, hogy a célcsoport által biztosított számítógépeken a program hibátlanul fusson és működjön. 

      - User Interface tervek

	A célszoftver felhasználói felülete grafikus rendszerű, tehát szöveges és rajzos elemek együttese jelenik meg
	  a képernyőn. 
	A felhasználó felület kialakításának szempontjai:
		-Ergonómia: az ember számára a legkisebb erőkifejtést igénylő felület kialakítása a
			cél.
		-Felhasználói jártasság felhasználása: a felhasználó előzetes ismereteinek
			felhasználása, ne akarjunk teljesen újat és egyben szokatlant alkotni.
		-Egyértelműség: egyszerű letisztult ábrákat, rajzokat és rövid tömör kifejezéseket
			használjunk.
		-Túlzsúfoltság kerülése: egyszerre ne kínáljuk fel az összes funkciót, rangsoroljuk
			őket, rendezzük őket osztályokba.
		-Konzisztencia: hasonló műveletek, hasonló módon történő jelölése.
		-Valóság visszatükrözése: pl. az adatrögzítő alkalmazás emlékeztessen a
			hagyományos papír alapú nyomtatványra.
		-Visszacsatolás : az események előtt váljon egyértelművé a felhasználó számára, hogy
			hol van lehetőség műveletek végzésére, és hozzuk a tudomására, ha csinált valamit.
			A hosszasabb folyamatoknál jelezzük, éppen hogyan áll, kb. mennyi idő van még
			hátra a feladat végrehajtásból.
		-Hibaminimalizálás: Nagyobb jelentőségű műveletek előtt kérjünk megerősítést, és
			tegyük lehetővé az egyes műveletek visszavonását. A hibákról küldjünk egyértelmű
			jelzést, lehetőleg feltüntetve a hiba okát.
		-Olvashatóság: jóllehet a tipográfia külön szakma, de az olvashatóságot és az
			átlátható szövegelrendezést a minimum követelménynek tekinthetjük.
		-Színek ésszerű használata: A színek segíthetik a tájékozódást, de zavarhatják is a
			felhasználót. A színhasználat,szubjektív ahogyan a felhasználói felület kialakítása is,
			de van néhány alapszabály. Korlátozott számú színt használjunk. Figyeljünk a színek
			közti harmóniára (legalább ne vibráljanak a színek egymás mellett), az
			olvashatóságra (sötét háttéren, ne sötét betűszínt használjunk). Az egyes funkciókat
			ne csak színekkel jelöljük, hanem valamilyen grafikai elemmel vagy szöveggel is,
			mert sok ember színtévesztő vagy színvak. De fordítva is igaz, hogy a szöveges
			üzenetekhez érdemes színt adni.
		-Egér és billentyűzet használata: a legkönnyebb és gyorsabb kezelhetőség érdekében
			az egér mellett tegyük lehetővé a billentyűzet használatát is.. 
		Ablakok: érdemes a részfeladatokat elkülöníteni és külön ablakokat használni erre,
			de mértékkel, ne alakuljon ki kaotikus láncszerkezet. A körkörös hivatkozást
			mindenképpen ki kell küszöbölni.
		-Egyéb: célcsoport sajátosságai, pl. kor vagy kulturális különbségek.
		

      - A programrendszer funkciói és struktúrája (rendszerdiagram, menüszerkezet).
      - Tervezési feltételek, korlátozó tényezők.
      
2) Modulonkénti részletes specifikáció      
      
      Modulok listája az ArenoOfOrcs szoftveren belül:
		-Menürendszer.
		-Level 1.
		-Level 2.
		-Level 3.
		
		Menürendszer:
			A program elindításakor ez fogadja a felhasználót.
			A menürendszerbe lépve különböző lehetőségeket ajánl fel nekünk. 3 fő pont első esetben.
			Ez a 3 fő pont a:
				-Start
				-Options
				-Exit
			A Start gombra kattintva a játék elindul az első pályával.
			Az Options gombra kattintva beállítási módokat állíthatunk be.
				Az Options menün belül, egy almenü rendszer jelenik meg. Itt lehetőségünk van kiválasztani a játékon 					belül lévő hangok letiltására, feloldására. Innen lehetőségünk van a főmenübe való visszalépésre.
			Az Exit gombra kattintva a játékból való kilépésről döntöttünk.
			
			A menürendszer egérrel vezérelhető. A pontokat egér perifériával tudjuk kiválasztani. A menürendszer különleges 			perifériát nem igényel. 
			A játék sikeres és sikertelen elvégzése után a játék automatikusan feldobja a menürendszert, ahol a játék 				további menetéről tudunk dönteni.
		
		Level 1:
			Az első pálya a játékban, a menüben a Start gomb lenyomása után a játékos automatikusan erre a pályára kerül be.
			A pályán nehézségi szint nem választható, egy nehézségi szint alapján megy végig a pályán lévő játék a 					szoftveren belül lévő programkód alapján.
			A pályán való játék egy "Orcs" karakterrel történik. A karaktert tudjuk irányítani a megadott kezelő gombokkal, 				különleges perifériát nem igényel, billentyűzettel vezérelhető.
				A pályán a szigeteken és a földön játszódik a játék, gravitáció hat a játékosra és az enemykre is. 					Akadálynak víz elemek vannak berakva, ezekre lépve a játékos, enemy leesik a groundről, a játékos meghal 				 és a játék véget ér. Ezután a menürendszer jelentkezik és választhatunk az Exit vagy Retry opciók közül.
				
			A pályán feladatot kell teljesíteni. A feladat minden esetben az összes meglévő enemy megölése, úgy hogy a mi 				karakterünk nem hal meg.
			Ha ez sikerül a pályát sikeresen teljesítettük.
			A sikertelen teljesítés a pályán akkor jön elő, ha a játékosunk, karaktertünk meghal valamilyen okból.
			Ilyen kiváltó ok lehet az, hogy az ellenség/enemy az életpontuknat egyre jobban lehúzva lenuláz minket, ez a 				játékos halálát jelenti, ha ez bekövetkezik akkor a játék sikertelennek tekinthető.
			Másik ilyen kiváltó ok lehet, ha a karakterünkkkel/játékossal "víz" elemre lépünk. Itt a karakterünk lezuhan és 			a játék véget ér ismét.
			
			A pálya vége:
				Sikeres teljesítés esetén a képernyőn egy gratulációs üzenetet kapunk a sikeres teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry, Next és Exit.
				Retry: A pálya újra kezdése.
				Next: Következő pályára lépés.
				Exit: Kilépés a játékból.
				
				Sikertelen teljesítés esetén a képernyő egy üzenetet kapunk a sikertelen teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry és Exit.
				Retry: A pálya újra kezdése.
				Exit: Kilépés a játékból.
		Level 2:
			Az első pálya sikeres teljesítése után léphetünk erre a pályára.
			A pályán nehézségi szint nem választható, egy nehézségi szint alapján megy végig a pályán lévő játék a 					szoftveren belül lévő programkód alapján.
			A pályán való játék egy "Orcs" karakterrel történik. A karaktert tudjuk irányítani a megadott kezelő gombokkal, 				különleges perifériát nem igényel, billentyűzettel vezérelhető.
				A pályán a szigeteken és a földön játszódik a játék, gravitáció hat a játékosra és az enemykre is. 					Akadálynak víz elemek vannak berakva, ezekre lépve a játékos, enemy leesik a groundről, a játékos meghal 				 és a játék véget ér. Ezután a menürendszer jelentkezik és választhatunk az Exit vagy Retry opciók közül.
				
			A pályán feladatot kell teljesíteni. A feladat minden esetben az összes meglévő enemy megölése, úgy hogy a mi 				karakterünk nem hal meg.
			Ha ez sikerül a pályát sikeresen teljesítettük.
			A sikertelen teljesítés a pályán akkor jön elő, ha a játékosunk, karaktertünk meghal valamilyen okból.
			Ilyen kiváltó ok lehet az, hogy az ellenség/enemy az életpontuknat egyre jobban lehúzva lenuláz minket, ez a 				játékos halálát jelenti, ha ez bekövetkezik akkor a játék sikertelennek tekinthető.
			Másik ilyen kiváltó ok lehet, ha a karakterünkkkel/játékossal "víz" elemre lépünk. Itt a karakterünk lezuhan és 			a játék véget ér ismét.
			
			A pálya vége:
				Sikeres teljesítés esetén a képernyőn egy gratulációs üzenetet kapunk a sikeres teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry, Next és Exit.
				Retry: A pálya újra kezdése.
				Next: Következő pályára lépés.
				Exit: Kilépés a játékból.
				
				Sikertelen teljesítés esetén a képernyő egy üzenetet kapunk a sikertelen teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry és Exit.
				Retry: A pálya újra kezdése.
				Exit: Kilépés a játékból.
				
		Level 3:
			Az első és második pálya sikeres teljesítése után léphetünk erre a pályára.
			A pályán nehézségi szint nem választható, egy nehézségi szint alapján megy végig a pályán lévő játék a 					szoftveren belül lévő programkód alapján.
			A pályán való játék egy "Orcs" karakterrel történik. A karaktert tudjuk irányítani a megadott kezelő gombokkal, 				különleges perifériát nem igényel, billentyűzettel vezérelhető.
				A pályán a szigeteken és a földön játszódik a játék, gravitáció hat a játékosra és az enemykre is. 					Akadálynak víz elemek vannak berakva, ezekre lépve a játékos, enemy leesik a groundről, a játékos meghal 				 és a játék véget ér. Ezután a menürendszer jelentkezik és választhatunk az Exit vagy Retry opciók közül.
				
			A pályán feladatot kell teljesíteni. A feladat minden esetben az összes meglévő enemy megölése, úgy hogy a mi 				karakterünk nem hal meg.
			Ha ez sikerül a pályát sikeresen teljesítettük.
			A sikertelen teljesítés a pályán akkor jön elő, ha a játékosunk, karaktertünk meghal valamilyen okból.
			Ilyen kiváltó ok lehet az, hogy az ellenség/enemy az életpontuknat egyre jobban lehúzva lenuláz minket, ez a 				játékos halálát jelenti, ha ez bekövetkezik akkor a játék sikertelennek tekinthető.
			Másik ilyen kiváltó ok lehet, ha a karakterünkkkel/játékossal "víz" elemre lépünk. Itt a karakterünk lezuhan és 			a játék véget ér ismét.
			
			A pálya vége:
				Sikeres teljesítés esetén a képernyőn egy gratulációs üzenetet kapunk a sikeres teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry, Next és Exit.
				Retry: A pálya újra kezdése.
				Next: Következő pályára lépés.
				Exit: Kilépés a játékból.
				
				Sikertelen teljesítés esetén a képernyő egy üzenetet kapunk a sikertelen teljesítésről, majd az 					menürendszer felajánlja a választható opciókat. Ilyen opciók a Retry és Exit.
				Retry: A pálya újra kezdése.
				Exit: Kilépés a játékból.
      
3) Fájlstruktúrák és globális adatok specifikációja
      - Külső fájlstruktúra (logikai szerkezet, rekordleírás, elérési mód)
      - Globális adatok jegyzéke
      - Fájl/adat keresztreferenciák
      
4) Folyamat/modul keresztreferencia táblázat

	Ez a táblázat mutatja az összes projektben használt változót, továbbá azt, hogy melyik POU-ban
	  találhatók és azon belül melyik Network-ben. A Cross Reference táblázat hasznos eszköz ha
	  szeretnénk tudni egy szimbólum nevet vagy címét, és hogy hol használjuk. 
	  A táblázat tartalma az első fordítás után generálódik és minden fordítás után frissül.
	
	Address: A változó címe
	 - Symbol: A változó neve, amennyiben a címhez tartozik szimbolikus név
	 - POU: a programegység, ahol a változóra hivatkozás történik
	 - Position: a hivatkozás helye a POU-n belül
	 - Read/Write: hozzáférés módja, vagyis az adott helyen a változót írja vagy olvassa-e a
	  program.
	  
	A változó állapot táblázat segítségével nyomon követhetők a projektben használt változók aktuális
	  állapotai, valamint megadhatók a kényszerített (Force) értékek is, miután letöltöttük a projektet a
	  PLC-re.

5) Tesztelési előírások, tesztelési dokumentáció
      - Tesztelési utasítás, tesztadatok

		A tesztelés kontrolált körülmények között zajlik, gyakorlatilag a rendszer ellenőrzött
		  futtatása, és az eredményül kapott adatok kiértékelése. 
	
		Mivel a hibáknak több szintje vagy típusa lehet:

		-Bemeneti/kimeneti hibák: helytelen bemenet elfogadása, helyes bemenet el nem
		 fogadása, hibás kimenet, helyes de hiányos kimenet
		  -Számítási hiba: helytelen algoritmus
		  -Interfész hibák
		  -Logikai hibák: hiányzó esetek, redundáns esetek, hiányzó feltételek,
		  -Adathiba: helytelen formátum, inkonszisztens adat,

		Így a tesztelés a következőképpen történik:

		-Belövési tesztek (debuggolás): a debuggolás hibakövetést jelent. A program
		  belső működését figyeljük meg töréspontok, vagy lépésenkénti végrehajtás
		  mentén. Nem csak a hiba meglétét, hanem a helyét is megmutatja.
		
		-Részegység teszt: egy rendszer vagy szoftver komponens önmagában, a
		  rendszer többi elemétől független vizsgálata.
		
		-Egységtesztek és integrációs tesztek: Mint mondtuk a részegységek önálló
		  megfelelő működése nem elegendő, az egész rendszernek is jól kell
		  működnie. A legcélravezetőbb módszer a komponensenkénti, vagyis
		  inkrementális tesztelés. Az inkremenseket egyenként fűzzük össze és minden
		  egyes hozzáfűzés után tesztelünk. 
		
		-Stresszteszt: a rendszer egészének működését teszteli. Célja a rendszer
		  teljesítményének felmérése szélsőséges körülmények között is. Két funkciója
		  van, megvédeni a rendszert a túrterhelés káros következményeitől (pl.
		  adatvesztés), és a szélsőséges körülmények között kibukhatnak olyan hibák,
		  amelyek normál körülmények között csak nagyon lassan.
		
		-Elfogadási teszt (acceptance teszt): az üzembe helyezés előtti utolsó teszt,
		  amely már valós adatokkal zajlik. Ezt alfa tesztelésnek nevezzük. Ilyenkor
		  dokumentálják, hogy a program eleget tesz-e a megrendelő elvárásainak. 

      - Integrációs tesztstratégia specifikálása:
      
		  -Feltételezzük, hogy az építıelemek már önmagukban teszteltek.

	 	  -Ha hibát észlelünk, az feltehetıleg a modulok  együttmőködésébıl adódik
      
     	   -Együttmőködő egységek vizsgálata:
	 
		 -Egy részrendszert állítunk össze
		 
		 -Többnyire csak technikai, nem funkcionális részrendszerek.
	
	   -System Level Testing (SLT):
	 
		 -A rendszer összes komponensének teljes körő
		   (funkcionális, nem funkcionális) tesztelése.
		
		 -Feladata annak megállapítása, hogy a rendszer
		   kiadható-e a megrendelőnek (végső ellenőrzés).
		 
		 -A fejlesztő szervezeten belül végzik.
		
		 -Szükséges az éles használat környezetének minél pontosabb szimulációja!
		 
	      -Terheléses tesztelés (Stressz-tesztelés)
			-A tesztelt rendszert valamilyen szempontból erős terhelésnek teszi ki.
			
			-Fontos tényező az idő!
 				Adott időkorláton belül hogyan teljesít nagy mennyiségű adatokon dolgozva.
				
			-Intenzív feldolgozást kívánó helyzeteket kell teremteni, melyek szélsőségesek, de előfordulhatnak.
			
			-A robosztusság ellenőrzésére érdemes a terhelést olyan szintre is emelni, amely (elvileg) nem fordulhat
			 elő.
			 
6) Programegységek (csomagok) létrehozásának módja
      - Speciális átlapolási előírások
	
	A szoftverlicence Free software, tehát a nyílt forrású szoftver. (A szerző közkincsé
	  teszi a program forráskódját, engedélyezi az abban való módosítást, a
	  szoftver ingyenes, szabad felhasználását és továbbadását.)
	  A licence szerződés rögzíti a terméktámogatás módját (frissítések, javítások, esetleg új
	  verzió), időtartamát. A gyártó által vállalt jótállás és szavatosság információ is a licence
	  szerződésben található.  

      - Átalakítási feltételek

	Átalakításra a kész szoftvernél a megrendelő részéről nincs lehetőség, a kész szoftver után lehet a következő
	  verzióra szerződést kötni. 
